{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nfunction DoabilitySearch(query) {\n  _s();\n\n  const [abilityData, setabilityData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    let ignore = false;\n    const controller = new AbortController();\n\n    async function fetchSearchResults() {\n      let responseBody = {};\n      setLoading(true);\n\n      try {\n        const response = await fetch(` https://pokeapi.co/api/v2/ability/${query}/`, {\n          signal: controller.signal\n        });\n        responseBody = await response.json();\n      } catch (e) {\n        if (e instanceof DOMException) {\n          console.log(\"== HTTP request cancelled\");\n        } else {\n          setError(true);\n          throw e;\n        }\n      }\n\n      if (!ignore) {\n        setLoading(false);\n        setError(false);\n        setabilityData(responseBody); // console.log(\"response body\", responseBody);\n      }\n    }\n\n    if (query) {\n      fetchSearchResults();\n    }\n\n    return () => {\n      controller.abort();\n      ignore = true;\n    };\n  }, [query]); // console.log(abilityData);\n\n  return [abilityData, loading, error];\n}\n\n_s(DoabilitySearch, \"ylgx7KwD7DqU2kXlZCUPa9BzqOM=\");\n\n_c = DoabilitySearch;\nexport default DoabilitySearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoabilitySearch\");","map":{"version":3,"sources":["/Users/jacoburenda/Documents/PokeApi-React.js/src/hooks/useAbilitiesSearch.js"],"names":["useState","useEffect","DoabilitySearch","query","abilityData","setabilityData","loading","setLoading","error","setError","ignore","controller","AbortController","fetchSearchResults","responseBody","response","fetch","signal","json","e","DOMException","console","log","abort"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,MAAM,GAAG,KAAb;AACA,UAAMC,UAAU,GAAG,IAAIC,eAAJ,EAAnB;;AACA,mBAAeC,kBAAf,GAAoC;AAClC,UAAIC,YAAY,GAAG,EAAnB;AACAP,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACF,cAAMQ,QAAQ,GAAG,MAAMC,KAAK,CACzB,sCAAqCb,KAAM,GADlB,EAE1B;AAAEc,UAAAA,MAAM,EAAEN,UAAU,CAACM;AAArB,SAF0B,CAA5B;AAIAH,QAAAA,YAAY,GAAG,MAAMC,QAAQ,CAACG,IAAT,EAArB;AACD,OAND,CAME,OAAOC,CAAP,EAAU;AACV,YAAIA,CAAC,YAAYC,YAAjB,EAA+B;AAC7BC,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,SAFD,MAEO;AACLb,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACA,gBAAMU,CAAN;AACD;AACF;;AACD,UAAI,CAACT,MAAL,EAAa;AACXH,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACAJ,QAAAA,cAAc,CAACS,YAAD,CAAd,CAHW,CAIX;AACD;AACF;;AACD,QAAIX,KAAJ,EAAW;AACTU,MAAAA,kBAAkB;AACnB;;AACD,WAAO,MAAM;AACXF,MAAAA,UAAU,CAACY,KAAX;AACAb,MAAAA,MAAM,GAAG,IAAT;AACD,KAHD;AAID,GAlCQ,EAkCN,CAACP,KAAD,CAlCM,CAAT,CAJ8B,CAuC9B;;AACA,SAAO,CAACC,WAAD,EAAcE,OAAd,EAAuBE,KAAvB,CAAP;AACD;;GAzCQN,e;;KAAAA,e;AA0CT,eAAeA,eAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction DoabilitySearch(query) {\n  const [abilityData, setabilityData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    let ignore = false;\n    const controller = new AbortController();\n    async function fetchSearchResults() {\n      let responseBody = {};\n      setLoading(true);\n      try {\n        const response = await fetch(\n          ` https://pokeapi.co/api/v2/ability/${query}/`,\n          { signal: controller.signal }\n        );\n        responseBody = await response.json();\n      } catch (e) {\n        if (e instanceof DOMException) {\n          console.log(\"== HTTP request cancelled\");\n        } else {\n          setError(true);\n          throw e;\n        }\n      }\n      if (!ignore) {\n        setLoading(false);\n        setError(false);\n        setabilityData(responseBody);\n        // console.log(\"response body\", responseBody);\n      }\n    }\n    if (query) {\n      fetchSearchResults();\n    }\n    return () => {\n      controller.abort();\n      ignore = true;\n    };\n  }, [query]);\n  // console.log(abilityData);\n  return [abilityData, loading, error];\n}\nexport default DoabilitySearch;\n"]},"metadata":{},"sourceType":"module"}